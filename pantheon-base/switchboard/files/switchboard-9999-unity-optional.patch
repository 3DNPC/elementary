=== modified file 'CMakeLists.txt'
--- CMakeLists.txt	2013-12-23 23:32:28 +0000
+++ CMakeLists.txt	2014-01-31 18:21:11 +0000
@@ -68,6 +68,16 @@
 
 #
 
+option (USE_UNITY "Use Unity integration" ON)
+
+if (USE_UNITY)
+  message ("-- Unity integration enabled")
+  set (UNITY_DEPS unity)
+  set (UNITY_OPTIONS --define=HAVE_UNITY)
+else ()
+  message ("-- Unity integration disabled")
+endif ()
+
 set (LIB_PACKAGES
   glib-2.0
   gio-2.0
@@ -93,6 +103,7 @@
   --vapidir=${CMAKE_BINARY_DIR}/lib
   --target-glib=2.32
   --thread
+  ${UNITY_OPTIONS}
 )
 
 find_package (Vala REQUIRED)
@@ -106,12 +117,12 @@
   ${LIB_NAME}
   ${LIB_PACKAGES} # this is needed until we provide a ${CMAKE_PROJECT_NAME}.deps file
   granite
-  unity
+  ${UNITY_DEPS}
 )
 
 set (DEPS_PKG
   granite
-  unity
+  ${UNITY_DEPS}
 )
 
 pkg_check_modules (DEPS REQUIRED ${DEPS_PKG} ${LIB_PKG})

=== modified file 'src/CategoryView.vala'
--- src/CategoryView.vala	2014-01-02 20:29:12 +0000
+++ src/CategoryView.vala	2014-01-31 18:16:51 +0000
@@ -211,7 +211,9 @@
                     }
                 }
 
+#if HAVE_UNITY
                 app.update_libunity_quicklist ();
+#endif
             }
         }
 
@@ -332,4 +334,4 @@
             return null;
         }
     }
-}
\ No newline at end of file
+}

=== modified file 'src/Switchboard.vala'
--- src/Switchboard.vala	2014-01-10 12:54:39 +0000
+++ src/Switchboard.vala	2014-01-31 18:20:08 +0000
@@ -119,6 +119,7 @@
             switch_to_plug (plug);
         }
 
+#if HAVE_UNITY
         // Updates items in quicklist menu using the Unity quicklist api.
         public void update_libunity_quicklist () {
             var launcher = Unity.LauncherEntry.get_for_desktop_id (app_launcher);
@@ -143,6 +144,7 @@
             if (personal_item != null && hardware_item != null && network_item != null && system_item != null)
                 launcher.quicklist = quicklist;
         }
+#endif
 
         private void build () {
             main_window = new Gtk.Window();
@@ -201,7 +203,9 @@
                 show_alert (_("No settings found"), _("Install some and re-launch Switchboard"), Gtk.MessageType.WARNING);
                 search_box.sensitive = false;
             } else {
+#if HAVE_UNITY	    
                 update_libunity_quicklist ();
+#endif
             }
         }
 
@@ -286,6 +290,7 @@
             headerbar.pack_end (search_box);
         }
 
+#if HAVE_UNITY
         private Dbusmenu.Menuitem? add_quicklist_for_category (Switchboard.Plug.Category category) {
             // Create menuitem for this category
             var category_item = new Dbusmenu.Menuitem ();
@@ -334,5 +339,6 @@
 
             return (empty ? null : category_item);
         }
+#endif
     }
-}
\ No newline at end of file
+}

