--- old/src/Plug.vala	2014-07-13 14:52:03.302376000 +0200
+++ new/src/Plug.vala	2014-07-13 14:51:01.204319369 +0200
@@ -23,6 +23,7 @@
     private string codename;
     private string version;
     private string arch;
+    private string type;
     private string processor;
     private string memory;
     private string graphics;
@@ -92,76 +93,30 @@
     // Gets all the hardware info
     private void setup_info () {
 
-        // Operating System
-        
-        File file = File.new_for_path("/etc/lsb-release");
         try {
-            var dis = new DataInputStream (file.read ());
-            string line;
-            // Read lines until end of file (null) is reached
-            while ((line = dis.read_line (null)) != null) {
-                if ("DISTRIB_ID=" in line) {
-                    os = line.replace ("DISTRIB_ID=", "");
-                    if ("\"" in os) {
-                        os = os.replace ("\"", "");
-                    }
-                } else if ("DISTRIB_RELEASE=" in line) {
-                    version = line.replace ("DISTRIB_RELEASE=", "");
-                } else if ("DISTRIB_CODENAME=" in line) {
-                    codename = line.replace ("DISTRIB_CODENAME=", "");
-                    codename = capitalize (codename);
-                }
-            }
+            Process.spawn_command_line_sync ("uname -s", out type);
         } catch (Error e) {
-            warning("Couldn't read lsb-release file, assuming elementary OS 0.3");
-            os = "elementary OS";
-            version = "0.3";
-            codename = "Freya";
+            type = "Linux";
         }
         
-        file = File.new_for_path("/etc/upstream-release/lsb-release");
+        // Operating System
+        os = "Gentoo " + type;
+
+        // Kernel version
         try {
-            var dis = new DataInputStream (file.read ());
-            string line;
-            // Read lines until end of file (null) is reached
-            while ((line = dis.read_line (null)) != null) {
-                if ("DISTRIB_ID=" in line) {
-                    is_ubuntu = line.replace ("DISTRIB_ID=", "");
-                } else if ("DISTRIB_RELEASE=" in line) {
-                    ubuntu_version = line.replace ("DISTRIB_RELEASE=", "");
-                } else if ("DISTRIB_CODENAME=" in line) {
-                    ubuntu_codename = line.replace ("DISTRIB_CODENAME=", "");
-                    ubuntu_codename = capitalize (ubuntu_codename);
-                }
-            }
+            Process.spawn_command_line_sync ("uname -r", out version);
         } catch (Error e) {
-            warning("Couldn't read upstream lsb-release file, assuming none");
+            warning (e.message);
+            arch = _("Unknown");
+            version = "unknown kernel";
+        }
+
             is_ubuntu = null;
             ubuntu_version = null;
             ubuntu_codename = null;
-        }
 
-        //Bugtracker and website
-        file = File.new_for_path("/etc/dpkg/origins/"+os);
-        bugtracker_url = "";
-        website_url = "";
-        try {
-            var dis = new DataInputStream (file.read ());
-            string line;
-            // Read lines until end of file (null) is reached
-            while ((line = dis.read_line (null)) != null) {
-                 if (line.has_prefix("Bugs:")) {
-                    bugtracker_url = line.replace ("Bugs: ", "");
-                }
-            }
-        } catch (Error e) {
-            warning(e.message);
-            warning("Couldn't find bugtracker/website, using elementary OS defaults");
-            if (website_url == "")
-                website_url = "http://elementaryos.org";
-            if (bugtracker_url == "")
+        website_url = "http://gentoo.org";
                 bugtracker_url = "https://bugs.launchpad.net/elementaryos/+filebug";
-        }
 
         // Architecture
         try {
@@ -275,7 +230,7 @@
         // make sure to keep all three %s in the string, otherwise switchboard will crash!
         // the first %s will be replaced by the version, the second by the codename (e.g "Freya") and the third by the CPU architecture (e.g. "64-bit")        
         // keep both \" if you want to use " as quote        
-        var version = new Gtk.Label (_("Version: %s \"%s\" ( %s )").printf (version, codename, arch));
+        var version = new Gtk.Label (_("kernel %s (%s)").printf (version, arch));
         version.set_alignment (0, 0);
         version.set_selectable (true);
         
@@ -289,7 +244,7 @@
         }
 
         var website_label = new Gtk.Label (null);
-        website_label.set_markup ("<a href=\"http://elementaryos.org/\">http://elementaryos.org</a>");
+        website_label.set_markup ("<a href=\"http://gentoo.org/\">http://gentoo.org</a>");
         website_label.set_alignment (0, 0);
 
         var details = new Gtk.Box (Gtk.Orientation.VERTICAL, 5);
@@ -403,22 +358,11 @@
             }
         });
 
-        // Upgrade button
-        var upgrade_button = new Gtk.Button.with_label (_("Check for Upgrades"));
-        upgrade_button.clicked.connect (() => {
-            try {
-                Process.spawn_command_line_async("update-manager");
-            } catch (Error e) {
-                warning (e.message);
-            }
-        });
-
         // Create a box for the buttons
         var button_box = new Gtk.Box (Gtk.Orientation.HORIZONTAL, 10);
         button_box.pack_start (help_button, false, false, 0);
         button_box.pack_start (translate_button, true, true, 0);
         button_box.pack_start (bug_button, true, true, 0);
-        button_box.pack_start (upgrade_button, true, true, 0);
         
         // Fit everything in a box
         var box = new Gtk.Box (Gtk.Orientation.VERTICAL, 5);
